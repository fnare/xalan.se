<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="ValidateCSV" default="compile" basedir=".">

    <!-- =================================================================== -->
    <!-- Generic properties                                                  -->
    <!-- =================================================================== -->
    <property environment="env"/>
    <property name="build.compiler" value="modern" />

    <property name="base.dir" value="."/>
    <property name="build.sysclasspath" value="ignore"/>

    <!-- Should Java compilations set the debug compiler option? -->
    <property name="compile.debug" value="true" />

    <!-- Should Java compilations set the deprecation compiler option? -->
    <property name="compile.deprecation" value="true" />

    <!-- Should Java compilations set the optimize compiler option? -->
    <property name="compile.optimize" value="true" />

    <property name="jdk.home"  value="C:\Program Files\Java\jdk1.7.0_11"/>

    <property name="src.dir"  value="${base.dir}/src"/>
    <property name="dest.dir" value="${base.dir}/build"/>
    <property name="build.dir" value="${base.dir}/classes"/>
    <property name="lib.dir" value="${base.dir}/lib"/>
    <property name="conf.dir" value="${base.dir}/config"/>

    <path id="compile.classpath">
        <fileset dir="${lib.dir}">
            <include name="log4j-1.2.15.jar" />
        </fileset>
        <pathelement location="${build.dir}"/>
        <pathelement location="${src.dir}"/>
    </path>

    <target name="prepare">
        <mkdir dir="${dest.dir}"/>
        <mkdir dir="${build.dir}"/>
    </target>

    <target name="clean">
        <delete quiet="true" failonerror="false" includeEmptyDirs="true">
            <fileset dir="${dest.dir}">
                <include name="**"/>
            </fileset>
            <fileset dir="${build.dir}">
                <include name="**"/>
            </fileset>
        </delete>
    </target>

    <target name="compile" depends="prepare">
        <javac srcdir="${src.dir}" destdir="${build.dir}"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}">
            <classpath refid="compile.classpath"/>
            <include name="**/*.java"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <path id="fileConverter.run.classpath">
            <pathelement location="${conf.dir}"/>
            <fileset dir="lib">
                <include name="*.jar"/>
            </fileset>
        </path>
        <manifestclasspath property="jar.classpath" jarfile="fileConverter.jar">
            <classpath refid="fileConverter.run.classpath"/>
        </manifestclasspath>

        <jar jarfile="${dest.dir}/fileConverter.jar" update="false">
            <manifest>
                <attribute name="Main-Class"
                           value="se.xalan.ui.Kaffepaus"/>
                <attribute name="Class-Path"
                           value="${jar.classpath}"/>
            </manifest>
            <fileset dir="${build.dir}"/>
            <fileset dir="${conf.dir}">

            </fileset>
        </jar>
    </target>

    <target name="run-debug">
        <echo>
            Running fileConverter in debug mode. Attach to Port 5007 for remote debugging
        </echo>
        <antcall target="run" inheritRefs="true">
            <param name="jvm.extra.1"
                   value="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5007"/>
            <param name="jvm.extra.2"
                   value="-Ddummy2"/>
        </antcall>
    </target>

    <target name="run" depends="jar">
        <echo>
            Running fileConverter.
        </echo>
        <java jar="${dest.dir}/fileConverter.jar"
              fork="true" newenvironment="false"
              jvm="${jdk.home}/bin/java">
          <classpath>
            <pathelement location="${dest.dir}/fileConverter.jar"/>
            <pathelement path="${java.class.path}"/>
          </classpath>
        </java>
    </target>

</project>
